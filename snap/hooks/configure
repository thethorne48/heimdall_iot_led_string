#!/bin/sh -e

HOST_URL_VAR="host-url"
CERTIFICATE_ID_VAR="certificate-id"
CERTIFICATE_PATH_VAR="certificate-path"
CLIENT_ID_VAR="client-id"
CA_FILE_NAME_VAR="ca-file"

HOST_URL="$(snapctl get $HOST_URL_VAR)"
CERTIFICATE_ID="$(snapctl get $CERTIFICATE_ID_VAR)"
CERTIFICATE_PATH="$(snapctl get $CERTIFICATE_PATH_VAR)"
CLIENT_ID="$(snapctl get $CLIENT_ID_VAR)"
CA_FILE_NAME="$(snapctl get $CA_FILE_NAME_VAR)"

if [ -z "$CERTIFICATE_ID" ]; then
    echo "$CERTIFICATE_ID_VAR is a required attribute. $CERTIFICATE_ID_VAR will prompt you for a value on first run"
		snapctl set $CERTIFICATE_ID_VAR=$CERTIFICATE_ID
else
	echo "$CERTIFICATE_ID_VAR argument set, set to $CERTIFICATE_ID_VAR"
fi

if [ -z "$HOST_URL" ]; then
    echo "$HOST_URL_VAR is a required attribute. $HOST_URL_VAR will prompt you for a value on first run"
		snapctl set $HOST_URL_VAR=""
else
	echo "$HOST_URL_VAR argument set, set to $HOST_URL_VAR"
fi

if [ -z "$CA_FILE_NAME" ]; then
	CA_FILE_NAME="AmazonRootCA1.pem"
	echo "No $CA_FILE_NAME_VAR argument set, defaulted to $CA_FILE_NAME"
	snapctl set $CA_FILE_NAME_VAR=""
else
	echo "$CA_FILE_NAME_VAR argument set, set to $CA_FILE_NAME"
fi

if [ -z "$CLIENT_ID" ]; then
    CLIENT_ID="LEDController"
		echo "No $CLIENT_ID_VAR argument set, defaulted to $CLIENT_ID"
		snapctl set $CLIENT_ID_VAR=$CLIENT_ID
else
	echo "$CLIENT_ID_VAR argument set, set to $CLIENT_ID"
fi

if [ -z "$CERTIFICATE_PATH" ]; then
    CERTIFICATE_PATH=".iot_certs"
		echo "No $CERTIFICATE_PATH_VAR argument set, defaulted to $CERTIFICATE_PATH"
		snapctl set $CERTIFICATE_PATH_VAR=$CERTIFICATE_PATH
else
	echo "$CERTIFICATE_PATH_VAR argument set, set to $CERTIFICATE_PATH"
fi

opts_dir="$SNAP_USER_DATA/options"
mkdir -p -m 0600 $opts_dir

tee $opts_dir/config.json <<EOF > /dev/null
{
	"HOST_URL":"$HOST_URL",
	"CERTIFICATE_ID":"$CERTIFICATE_ID",
	"CERTIFICATE_PATH":"$CERTIFICATE_PATH",
	"CLIENT_ID":"$CLIENT_ID",
	"CA_FILE_NAME":"$CA_FILE_NAME"
}
EOF

cat $opts_dir/config.json